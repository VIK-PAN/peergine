<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=gb2312">
<title>Live采集端</title>

<style>
body,td{
  font-size:12px;
}
.debug
{
	display:block;
}
.TabItem_oddNum
{
	cursor:hand;
	width:200px;
	height:20px;
	font-size:16px;
	text-align:center;
	background-color:#EEEED1;
}
.TabItem_evenNum
{
	cursor:hand;
	width:200px;
	height:20px;
	font-size:16px;
	text-align:center;
	background-color:#F0F8FF;
}
</style>
<script language="javascript" src="js/pgLibLive.js"></script>
<script language="javascript" src="js/pgLibLiveMultiError.js"></script>
<script language="javascript" src="js/pgLibLiveMultiCapture.js"></script>
<script language="javascript" src="js/pgLibLiveMultiRender.js"></script>

</head>
<body onload="pgInitialize()" onbeforeunload="pgClean()">

<table width="640" border="0">

  <tr><td style="padding:3px">
    <span>采集端ID: </span>
    <input id="id_CaptureID" type="text" size="20" value="" >
    <input id="id_Ctrl" type="button" value="开始" onclick="pgCtrl()">&nbsp;&nbsp;&nbsp;&nbsp;
	<input type="button" value="打开转发" onclick="ForwardAlloc()" />&nbsp;
	<input type="button" value="停止转发" onclick="ForwardFree()" />
	<input type="button" value="开始录像" onclick="pgRecordStart()" />
	<input type="button" value="停止录像" onclick="pgRecordStop()" />
  </td></tr>
<!--
  <tr>
  	<td class="debug" >测试次数:
  		<input id="testTimes" type="test" value="100"  />
  		<input type="button" value="开始测试" onclick="TestRun()" />
  		<p id="testInfo"></p>
  	</td>
  </tr>
  <tr class="debug" >
  	<td>
  		<p id="allocError">申请错误:</p>
  		<p id="freeError">释放错误:</p>
  	</td>
  </tr>
-->
  <tr><td style="padding:0px;border:1px solid #cccccc;" align="center">
    <object id="pgAtx" classid="clsid:FFC9369F-A8D9-4598-8E22-ED07C7628BFC"
      width="320" height="240">请先安装Peergine控件，再重新打开页面！
    </object>
  </td></tr>

  <tr><td style="padding:6px">
  	<span id="id_LiveSta"></span><br>
  </td></tr>
  
  <tr><td height="150" valign="top" style="padding:1px">
	<iframe id="id_MessageOut" width="100%" height="100%" frameborder="0"
	  scrolling="auto" style="overflow:visible;word-break:keep-all;border:1px solid #cccccc;">
	</iframe>
  </td></tr>

  <tr><td style="padding:6px">
    <input id="id_Notify" type="text" size="40">&nbsp;&nbsp;
    <input type="button" value="发送通知" onclick="pgNotify()">
    <br><br>
  </td></tr>
 
  <tr>
  	<td>
  		播放端列表:
  		<table id="renderList" >
  		</table>
  		<br />选中播放端:<label id="selectedRender"></label>
  	</td>
  </tr>
  <tr>
  	<td>
  		<p style="font-size:15px;color:red" id="info"></p>
  	</td>
  </tr>
  <tr>
  	<td>传输信息:
  		<p id="FileProgress"></p>
  	</td>
  </tr>

</table>

<br><br>

<table width="640" border="1" cellpadding="0" cellspacing="0" bordercolor="#93A9E3">
  <tr>
    <td height="24" bgcolor="#93A9E3" class="txt">**调式信息：</td>
  </tr>
  <tr>
    <td height="200" valign="top">
	  <iframe id="debugOut" width="100%" height="100%" frameborder="0"
		 scrolling="auto" style="overflow:visible;word-break:keep-all;">
	  </iframe>
	</td>
  </tr>
  <tr>
  	<td>
  	<input id="debugSwitch" type='checkbox' checked="1">允许输出</input>
  	</td>
  </tr>
</table>

<script language="javascript">
	
var s_sAddrSvr = "connect.peergine.com:7781";

var bIsZhuDong = false;
var sChsObj = "";
var renderList =new Array();
var bIsReplying = false;

function $(ID)
{
	return document.getElementById(ID);
}

function RenderLeave(sPeer)
{
	var tempIndex = 0;
	for(var i=0;i<renderList.length;i++)
	{
		if(renderList[i] == sPeer)
			tempIndex = i;
	}
	renderList.splice(tempIndex,1);
	if($(sPeer) != null)
	var index = $(sPeer).name;
	$("renderList").deleteRow(index);
}

function RenderClean()
{
	for(var i=0;i<renderList.length;i++)
	{
		$("renderList").deleteRow(0);
	}
	renderList.splice(0,renderList.length);
}

function RenderJoin(sPeer)
{
	var bHas = false;
	for(var i=0;i<renderList.length;i++)
	{
		if(renderList[i] == sPeer)
			bHas = true;
	}
	if(bHas)return;
	renderList.push(sPeer);
	var tab = $("renderList");
	var newTR = tab.insertRow(tab.rows.length);
	var xuhao = newTR.rowIndex;
	var newTH = newTR.insertCell(0);
	var claName = (xuhao%2 == 0?"TabItem_oddNum":"TabItem_evenNum");
	newTH.innerHTML = "<input id='"+sPeer+"' name='"+xuhao+"' class='"+claName+"' readonly='readonly' value='"+sPeer+"' onclick='selectedRenderChange(\""+sPeer+"\")'>";
}

function selectedRenderChange(sPeer)
{
	if(sChsObj != sPeer)
	{
		sChsObj = sPeer;
	}
	else
	{
		sChsObj = "";
	}
	$("selectedRender").innerHTML = sChsObj;
	bIsZhuDong = true;
}

//for test
var bTest = false;
var iTestTimes = 0;
var iAllocSuccess = 0;
var iAllocDefault = 0;
var iFreeSuccess = 0;
var iFreeDefault = 0;
var iMethID = 32;
var bTransfering = false;
var bNeedCallback = false;
var sTransferObjGet = "";
var sReplysPeer = "";
var sReplysFile = "";

//for test
function TestRun()
{
	var testTimes = document.getElementById("testTimes").value;
 	 bTest = true;
	iTestTimes = testTimes;
	iAllocSuccess = 0;
	iAllocDefault = 0;
	iFreeSuccess = 0;
	iFreeDefault = 0;
	outString("第1次测试");
	ForwardAlloc();
}

function TestFreeReply(iErr)
{
	if (iErr == 0) {
		iFreeSuccess++;
	}
	else
	{
		iFreeDefault++;
		outString("forwardfree:"+iErr);
		document.getElementById("freeError").innerHTML += "forwardalloc:"+iErr;
	}
		
	if (bTest)
	{
		if(iAllocSuccess + iAllocDefault < iTestTimes)
		{
			outString("第"+(iAllocSuccess + iAllocDefault)+"次测试");
			document.getElementById("testInfo").innerHTML = "第"+(iAllocSuccess + iAllocDefault)+"次测试";
			ForwardAlloc();
		}
		else
		{
			outString("第"+(iAllocSuccess + iAllocDefault)+"次测试");
			document.getElementById("testInfo").innerHTML = "第"+(iAllocSuccess + iAllocDefault)+"次测试";
			bTest = false;
			outString("申请成功:"+iAllocSuccess+"次");
			outString("申请失败:"+iAllocDefault+"次");
			outString("释放成功:"+iFreeSuccess+"次");
			outString("释放失败:"+iFreeDefault+"次");
		}
	}	
}

function TestAllocReply(iErr)
{
	if (iErr == 0) {
		iAllocSuccess++;
	}
	else
	{
		iAllocDefault++;
		outString("forwardalloc:"+iErr);
		document.getElementById("allocError").innerHTML += "forwardalloc:"+iErr;
	}
	if (bTest)
	{
		ForwardFree();
	}	
}

var pgLiveUI = {
	OnEvent:function(sAct, sData, sPeer) {
//		debugOutString("OnEvent: sAct=" + sAct + ", sData=" + sData + ", sPeer=" + sPeer);

		if (sAct == "VideoStatus") {
			var sBitRate = getcontent(sData, "bitrate");
			var sFrmRate = getcontent(sData, "frmrate");
			var sFrmPlay = getcontent(sData, "frmplay");
			id_LiveSta.innerText = "速率: " + sBitRate + "bps，帧速: "
				+ sFrmRate + "帧/秒，播放帧: " + sFrmPlay;
		}
		else if (sAct == "VideoFrameStat") {
			debugOutString("sAct=" + sAct + ", sData=" + sData + ", sPeer=" + sPeer);
		}
		else if (sAct == "Message") {
			pgMessageOut(sData);
		}
		else if (sAct == "RenderJoin") {
			RenderJoin(sPeer);
			pgMessageOut("播放端：" + sPeer + "加入");

			var i = 0;
			while (true) {
				var sRenID = s_oLive.RenderEnum(i);
				if (sRenID == "") {
					break;
				}
				
				pgMessageOut("RenderEnum: Index=" + i + ", RenID=" + sRenID);
				i++;
			}
		}
		else if (sAct == "RenderLeave") {
			RenderLeave(sPeer);
			pgMessageOut("播放端：" + sPeer + "离开");

			var i = 0;
			while (true) {
				var sRenID = s_oLive.RenderEnum(i);
				if (sRenID == "") {
					break;
				}
				
				pgMessageOut("RenderEnum: Index=" + i + ", RenID=" + sRenID);
				i++;
			}
		}
		else if (sAct == "Login") {
			if (sData == "0") {
				pgMessageOut("已经登录");
			}
			else {
				pgMessageOut("登录失败: " + sData);
			}
		}
		else if (sAct == "Logout") {
			pgMessageOut("已经注销");
		}
		else if (sAct == "Connect") {
			pgMessageOut("已经连接采集端");
		}
		else if (sAct == "Disconnect") {
			pgMessageOut("已经断开采集端");
		}
		else if(sAct == "ForwardAllocReply")
		{
			ForwardAllocReply(sData);
		}
		else if(sAct == "ForwardFreeReply")
		{
			ForwardFreeReply(sData);
		}
		else if(sAct == "FilePutRequest")
		{
			FilePutRequest(sData,sPeer);
		}
		else if(sAct == "FileGetRequest")
		{
			FileGetRequest(sData,sPeer);
		}
		else if(sAct == "FileAccept")
		{
			FileAccept(sPeer);
		}
		else if(sAct == "FileReject")
		{
			FileReject(sPeer);
		}
		else if(sAct == "FileProgress")
		{
			FileProgress(sData);
		}
		else if(sAct == "FileFinish")
		{
			FileFinish(sPeer);
		}
		else if(sAct == "FileAbort")
		{
			FileAbort(sData);
		}
	},
	OnOutString:function(sStr) {
		debugOutString(sStr);
	}
};

var s_oLive = null;
var s_bCtrl = false;

function FileFinish(sPeer)
{
	bNeedCallback = false;
	bIsReplying = false;
	bTransfering = false;
	$("info").innerHTML = "与"+sPeer+"端文件传输完毕...";
}

function FileAbort(sData)
{
	var sPath = getcontent(sData, "path");
	var sReqSize = getcontent(sData, "total");
	var sCurSize = getcontent(sData, "position");
	bTransfering = false;
	$("info").innerHTML = "文件传输中断了，文件信息:本地文件路径:" + sPath + " 已传输大小:" + sCurSize
		+ "/文件总大小:" + sReqSize;
}

function FileAccept(sPeer)
{
	bNeedCallback = false;
	bIsReplying = false;
	bTransfering = true;
	bNeedCallback = false;
	$("info").innerHTML = sPeer+"接受了文件传输:..."+"<a href='#' onclick='btnRefuse()'>取消</a>";
}

function FileReject(sPeer)
{
	bNeedCallback = false;
	bIsReplying = false;
	bTransfering = false;
	$("info").innerHTML = sPeer+"拒绝了文件传输:...";
}

function FileProgress(sData)
{
	var sPath = getcontent(sData, "path");
	var sReqSize = getcontent(sData, "total");
	var sCurSize = getcontent(sData, "position");
	$("FileProgress").innerHTML = "本地文件路径:" + sPath + " 已传输大小:" + sCurSize
		+ "/文件总大小:" + sReqSize;
}

function getcontent(sData, skey)
{
	var result = "";
	var values = sData.split("&");
	for (var i = 0; i < values.length; i++) {
		var entry = values[i].split("=");
		if (entry[0] ==skey) {
			result = entry[1];
			break;
		}
	}
	return result;
}
	
function FilePutRequest(sData, sPeer)
{
	var file = getcontent(sData, "peerpath");
	bIsZhuDong = false;
	sReplysPeer = sPeer;
	sReplysFile = file;
	bIsReplying = true;
	bNeedCallback = true;
	$("info").innerHTML = "是否接受"+sPeer+"的文件("+file+")上传请求:<a href='#' onclick='btnAccept()'>接受</a>or<a href='#' onclick='btnRefuse()'>拒绝</a>";
	iMethID = 32;
}

function FileGetRequest(sData, sPeer)
{
	var file = getcontent(sData, "peerpath");
	bIsZhuDong = false;
	bNeedCallback = true;
	sReplysPeer = sPeer;
	sReplysFile = file;
	bIsReplying = true;
	$("info").innerHTML = "是否接受"+sPeer+"的文件("+file+")下载请求:<a href='#' onclick='btnAccept()'>接受</a>or<a href='#' onclick='btnRefuse()'>拒绝</a>";
	iMethID = 33;
}

function btnRefuse()
{
	var sPeer = "";
	if (bIsZhuDong) {
		sPeer = sChsObj;
	}
	else {
		sPeer = sTransferObjGet;
	}
		
	if (!bNeedCallback) {
		outString(sPeer);
		s_oLive.FileCancel(sPeer);
		bTransfering = false;
		$("info").innerHTML = "";
	}
	else {
		var iErr = s_oLive.FileReject(sReplysPeer);
		if (iErr != 0) {
			outString("FileRequest defeated IErr = " + iErr);
		}
		else {
			bNeedCallback = false;
			dearFileRequest(sReplysPeer, sReplysFile, 1);
		}
	}
}

function btnAccept()
{
	var sFileInfo = pgAtx.utilCmd("DlgFile",
		"(Open){" + (iMethID == 32 ? 0 : 1) + "}(Ext){}(File){}(Flag){0}(Filter){}");
	var sPath = pgAtx.omlGetContent(sFileInfo, "Path");
	var iErr = s_oLive.FileAccept(sReplysPeer, sPath);
	if (iErr != 0) {
		outString("FileRequest defeated IErr = " + iErr);
	}
	else {
		dearFileRequest(sReplysPeer, sReplysFile, 0);
	}
}

function dearFileRequest( sPeer,  sPeerPath,  iAction)
{
	bNeedCallback = false;
	bIsReplying = false;
	if (iAction != 1) {
		bNeedCallback = false;
		sTransferObjGet = sPeer;
		bIsZhuDong = false;
		bTransfering = true;
		$("info").innerHTML = "您正在进行文件("+ sPeerPath + ")传输:..."+"<a href='#' onclick='btnRefuse()'>取消</a>";
	}
	else {
		bTransfering = false;
		$("info").innerHTML =  "您拒绝了文件("+ sPeerPath + ")传输:...";
	}
}

function ForwardAllocReply(sData)
{
	var oTemp1 = document.getElementById("allocError");
	var oTemp2 = document.getElementById("freeError");
	if (oTemp1 && oTemp2) {
		TestAllocReply(sData);
	}

	if (Number(sData) == 0) {
		pgMessageOut("申请中转服务器成功!");
	}
	else {
		pgMessageOut("申请中转服务器失败! 错误码: " + sData);
	}
}

function ForwardFreeReply(sData)
{
	var oTemp1 = document.getElementById("allocError");
	var oTemp2 = document.getElementById("freeError");
	if (oTemp1 && oTemp2) {
		TestFreeReply(sData);
	}

	if (Number(sData) == 0) {
		pgMessageOut("释放中转服务器成功!");
	}
	else {
		pgMessageOut("释放中转服务器失败! 错误码: " + sData);
	}
}

function ForwardAlloc()
{
	s_oLive.ForwardAlloc();
}

function ForwardFree()
{
	s_oLive.ForwardFree();
}

function pgInitialize()
{
	s_oLive = new pgLibLive(pgAtx, pgLiveUI);
}

function pgClean()
{
	if (s_oLive) {
		s_oLive.Clean();
		s_oLive = null;
	}
}

function pgCtrl()
{
	if (s_bCtrl) {
		if (bTransfering || bIsReplying) {
			bIsReplying = false;
			bTransfering = false;
			btnRefuse();
		}

		s_oLive.VideoStop();
		s_oLive.AudioStop();
		s_oLive.Stop();
		s_oLive.Clean();
		s_bCtrl = false; 
		RenderClean();

		id_Ctrl.value = "开始";
	}
	else {
		if (!s_oLive.Initialize(pgLibLiveMode.Capture, id_CaptureID.value, "",
			s_sAddrSvr, "", 3, "(Code){3}(Mode){3}(Rate){66}(BitRate){600}(MaxStream){0}(FrameStat){1}"))
		{
			return;
		}
		
		s_oLive.Start("");
		s_oLive.VideoStart("");
		s_oLive.AudioStart("");
		s_bCtrl = true;

		id_Ctrl.value = "停止";
	}
}
	
function pgNotify()
{
	if (s_oLive) {
		s_oLive.NotifySend(id_Notify.value);
	}
}

function pgMessageOut(sMsg)
{
	try {
		var sHtml = "<pre style={font-size:12px;word-wrap:break-word;word-break:break-all;white-space:normal;}>" + sMsg + "</pre>";
		id_MessageOut.document.body.insertAdjacentHTML("beforeEnd", sHtml);
		id_MessageOut.document.body.doScroll("pageDown");
	}
	catch (e) {
	}
}

function pgRecordStart()
{
	if (s_oLive) {
		s_oLive.RecordStart("e:\\temp\\live.avi", true, true);
	}
}

function pgRecordStop()
{
	if (s_oLive) {
		s_oLive.RecordStop();
	}
}

function debugOutHTML(sHtml)
{
	try {
		debugOut.document.body.insertAdjacentHTML("beforeEnd", sHtml);
		debugOut.document.body.doScroll("pageDown");
	}
	catch (e) {
	}
}

function outString(out)
{
	debugOutString(out);
}

function debugOutString(sOut)
{
	if (debugSwitch.checked) {
		debugOutHTML("<pre style={font-size:12px;word-wrap:break-word;word-break:break-all;white-space:normal;}>" + sOut + "</pre>");
	}
}

</script>

</body>
</html>