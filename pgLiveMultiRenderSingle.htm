<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=gb2312">
<title>Live播放端</title>

<style>
body,td{
  font-size:12px;
}
</style>
<script language="javascript" src="js/pgLibLiveMultiError.js"></script>
<script language="javascript" src="js/pgLibLiveMultiRender.js"></script>

</head>
<body onload="pgInitialize()" onbeforeunload="pgClean()">

<table width="640" border="0">

  <tr><td style="padding:3px">
    <span>采集端ID: </span>
    <input id="id_CaptureID" type="text"  value="" />
    <input id="id_Ctrl" type="button" value="开始" onclick="pgCtrl()">&nbsp;&nbsp;&nbsp;&nbsp;
    <input type="button" value="整幅" onclick="pgVideoShowMode(1)">&nbsp;
    <input type="button" value="裁剪" onclick="pgVideoShowMode(0)">&nbsp;
    <input type="button" value="录像开始" onclick="pgVideoRecored(true)">&nbsp;
    <input type="button" value="录像停止" onclick="pgVideoRecored(false)">&nbsp;
    <input type="button" value="静音启用" onclick="pgAudioMute(true)">&nbsp;
    <input type="button" value="静音取消" onclick="pgAudioMute(false)">&nbsp;
    <input type="button" value="发言启用" onclick="pgAudioSpeech(true)">&nbsp;
    <input type="button" value="发言取消" onclick="pgAudioSpeech(false)">&nbsp;
  </td></tr>
  <tr>
  	<td></td>
  </tr>
  <tr><td style="padding:2px">
    <object id="pgAtx" classid="clsid:FFC9369F-A8D9-4598-8E22-ED07C7628BFC"
      width="640" height="480" style="border:1px solid #cccccc;">请先安装Peergine控件，再重新打开页面！
    </object>
  </td></tr>

  <tr><td style="padding:2px">
  	<span id="id_LiveSta"></span>
  </td></tr>

  <tr><td height="150" valign="top" style="padding:3px">
	<iframe id="id_NotifyOut" width="100%" height="100%" frameborder="0"
	  scrolling="auto" style="overflow:visible;word-break:keep-all;border:1px solid #cccccc;">
	</iframe>
  </td></tr>

  <tr><td style="padding:3px">
    <textarea id="id_Msg" rows="10" cols="60"></textarea>&nbsp;&nbsp;
    <input type="button" value="发送消息" onclick="pgMessage()">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
    <input type="button" value="LAN扫描" onclick="pgLanScan()">
    <br><br>
  </td></tr>
 
  <tr>
  	<td>
      <input type="button" value="上传文件" onclick="btnPut()"/>
  	  <input type="button" value="下载文件" onclick="btnGet()"/>
  	</td>
  </tr>
  <tr>
  	<td>
  	  <p style="font-size:15px;color:red" id="info"></p>
  	</td>
  </tr>
  <tr>
  	<td>传输信息:
  	  <p id="FileProgress"></p>
  	</td>
  </tr>

</table>

<br><br>

<table width="646" border="1" cellpadding="0" cellspacing="0" bordercolor="#93A9E3">
  <tr>
    <td height="24" bgcolor="#93A9E3" class="txt">**调式信息：</td>
  </tr>
  <tr>
    <td height="200" valign="top">
	  <iframe id="debugOut" width="100%" height="100%" frameborder="0"
		 scrolling="auto" style="overflow:visible;word-break:keep-all;">
	  </iframe>
	</td>
  </tr>
  <tr>
  	<td>
  	<input id="debugSwitch" type='checkbox' checked="1">允许输出</input>
  	</td>
  </tr>
</table>

<script language="javascript">
	
var sReplysFile = "";
var sReplysPeer = "";

var iMethID = 32;
var bTransfering = false;
var bIsReplying = false;
var bNeedCallback = false;

function FileAccept(sPeer)
{
	bNeedCallback = false;
	bIsReplying = false;
	bTransfering = true;
	$("info").innerHTML = sPeer + "接受了文件传输:..." + "<a href='#' onclick='btnRefuse()'>取消</a>";
}

function FileReject(sPeer)
{
	bNeedCallback = false;
	bIsReplying = false;
	bTransfering = false;
	$("info").innerHTML = sPeer + "拒绝了文件传输:...";
}

var pgLiveUI = {
	OnEvent:function(sAct, sData, sCapID) {
		debugOutString("OnEvent: sAct=" + sAct + ", sData=" + sData + ", sCapID=" + sCapID);

		if (sAct == "VideoStatus") {
			var sBitRate = getcontent(sData, "bitrate");
			var sFrmRate = getcontent(sData, "frmrate");
			var sFrmPlay = getcontent(sData, "frmplay");
			id_LiveSta.innerText = "速率: " + sBitRate + "bps，帧速: "
				+ sFrmRate + "帧/秒，播放帧: " + sFrmPlay;
		}
		else if (sAct == "Notify") {
			// 收到采集端发送的通知
			pgNotifyOut(sData);
		}
		else if (sAct == "RenderJoin") {
			pgNotifyOut("播放端：" + sCapID + "加入");
		}
		else if (sAct == "RenderLeave") {
			pgNotifyOut("播放端：" + sCapID + "离开");
		}
		else if (sAct == "Login") {
			if (sData == "0") {
				pgNotifyOut("已经登录");
			}
			else {
				pgNotifyOut("登录失败: " + sData);
			}
		}
		else if (sAct == "Logout") {
			pgNotifyOut("已经注销");
		}
		else if (sAct == "Connect") {
			pgNotifyOut("已经连接采集端");
		}
		else if (sAct == "Disconnect") {
			pgNotifyOut("已经断开采集端");
		}
		else if (sAct == "Reject") {
			pgNotifyOut("采集端拒绝连接");
			if (s_bCtrl) {
				s_bCtrl = false;
				id_Ctrl.value = "开始";
			}
			else {
				s_bCtrl = true;
				id_Ctrl.value = "停止";
			}
		}
		else if (sAct == "Offline") {
			pgNotifyOut("采集端不在线");
		}
		else if (sAct == "LanScanResult") {
			// LAN扫描结果
			pgNotifyOut(sData);
		}
		else if (sAct == "ForwardAllocReply") {
			
		}
		else if (sAct == "ForwardFreeReply") {
			
		}
		else if (sAct == "FilePutRequest") {
			FilePutRequest(sData, sCapID);
		}
		else if (sAct == "FileGetRequest") {
			FileGetRequest(sData, sCapID);
		}
		else if (sAct == "FileAccept") {
			FileAccept(sCapID);
		}
		else if (sAct == "FileReject") {
			FileReject(sCapID);
		}
		else if (sAct == "FileProgress") {
			FileProgress(sData);
		}
		else if (sAct == "FileFinish") {
			FileFinish(sCapID);
		}
		else if (sAct == "FileAbort") {
			FileAbort(sData);
		}
	},

	OnOutString:function(sStr) {
		debugOutString(sStr);
	}
};


function FileFinish(sPeer)
{
	bNeedCallback = false;
	bIsReplying = false;
	bTransfering = false;
	$("info").innerHTML = "与"+sPeer+"端文件传输完毕...";
}

function FileAbort(sData)
{
	var sPath = getcontent(sData, "path");
	var sReqSize = getcontent(sData, "total");
	var sCurSize = getcontent(sData, "position");
	bTransfering = false;
	$("info").innerHTML = "文件传输中断了，文件信息:本地文件路径:" + sPath + " 已传输大小:" + sCurSize
				+ "/文件总大小:" + sReqSize;
}
function btnPut()
{
	if(bTransfering)
	{
		alert("系统正忙，请稍后再操作...");
		return;
	}

	bIsZhuDong = true;
	var sFileInfo = pgAtx.utilCmd("DlgFile","(Open){1}(Ext){}(File){}(Flag){0}(Filter){}");
	var sPath = pgAtx.omlGetContent(sFileInfo, "Path");
	var iErr = s_oLive.FilePutRequest(id_CaptureID.value, sPath, "");
	if(iErr == -1)
	{
		bIsZhuDong = true;
		bTransfering = true;
		bNeedCallback = false;
		$("info").innerHTML = "您正在请求文件上传..."+"<a href='#' onclick='btnRefuse()'>取消</a>";
	}
	else
	{
		$("info").innerHTML = "文件上传请求失败(错误码:"+iErr+")...";
	}
}
function btnGet()
{
	if(bTransfering)
	{
		alert("系统正忙，请稍后再操作...");
		return;
	}
	bIsZhuDong = true;
	var sFileInfo = pgAtx.utilCmd("DlgFile","(Open){0}(Ext){}(File){}(Flag){0}(Filter){}");
	var sPath = pgAtx.omlGetContent(sFileInfo, "Path");
	var iErr = s_oLive.FileGetRequest(id_CaptureID.value, sPath, "");
	if(iErr == -1)
	{
		bIsZhuDong = true;
		bTransfering = true;
		bNeedCallback = false;
		$("info").innerHTML = "您正在请求文件下载..."+"<a href='#' onclick='btnRefuse()'>取消</a>";
	}
	else
	{
		$("info").innerHTML = "文件下载请求失败(错误码:"+iErr+")...";
	}
}

function FileProgress( sData)
{
	var sPath = getcontent(sData, "path");
	var sReqSize = getcontent(sData, "total");
	var sCurSize = getcontent(sData, "position");
	$("FileProgress").innerHTML = "本地文件路径:" + sPath + " 已传输大小:" + sCurSize
		+ "/文件总大小:" + sReqSize;
}

function $(ID)
{
	return document.getElementById(ID);
}

function btnRefuse()
{
	if (!bNeedCallback) {
		s_oLive.FileCancel(id_CaptureID.value);
		bTransfering = false;
		$("info").innerHTML = "";
	}
	else {
		var iErr = s_oLive.FileReject(sReplysPeer, 13);
		if (iErr != 0) {
			outString("FileRequest defeated IErr = " + iErr);
		}
		else {
			bNeedCallback = false;
			dearFileRequest(sReplysPeer, sReplysFile, 1);
		}
	}
}

function FilePutRequest(sData, sPeer)
{
	var file = getcontent(sData, "peerpath");
	sReplysPeer = sPeer;
	bIsZhuDong = false;
	sReplysFile = file;
	bIsReplying = true;
	bNeedCallback = true;
	$("info").innerHTML = "是否接受"+sPeer+"的文件("+file+")上传请求:<a href='#' onclick='btnAccept()'>接受</a>or<a href='#' onclick='btnRefuse()'>拒绝</a>";
	iMethID = 32;
}
function FileGetRequest(sData, sPeer)
{
	var file = getcontent(sData, "peerpath");
	bNeedCallback = true;
	bIsZhuDong = false;
	sReplysPeer = sPeer;
	bIsReplying = true;
	sReplysFile = file;
	$("info").innerHTML = "是否接受"+sPeer+"的文件("+file+")下载请求:<a href='#' onclick='btnAccept()'>接受</a>or<a href='#' onclick='btnRefuse()'>拒绝</a>";
	iMethID = 33;
}

function btnAccept()
{
	var sFileInfo = pgAtx.utilCmd("DlgFile",
		"(Open){" + (iMethID == 32?0:1) + "}(Ext){}(File){}(Flag){0}(Filter){}");
	var sPath = pgAtx.omlGetContent(sFileInfo, "Path");
	var iErr = s_oLive.FileAccept(sReplysPeer, sPath);
	if (iErr != 0) {
		outString("FileRequest defeated IErr = " + iErr);
	} else {
		dearFileRequest(sReplysPeer, sReplysFile, 0);
	}
}

function dearFileRequest( sPeer,  sPeerPath,  iAction)
{
	bNeedCallback = false;
	bIsReplying = false;
	if (iAction != 1) {
		bNeedCallback = false;
		bIsZhuDong = false;
		bTransfering = true;
		$("info").innerHTML = "您正在进行文件("+ sPeerPath + ")传输:...<a href='#' onclick='btnRefuse()'>取消</a>";
	} else {
		bTransfering = false;
		$("info").innerHTML =  "您拒绝了文件("+ sPeerPath + ")传输:...";
	}
}

function getcontent( sData, skey)
{
	var result ="";
	var values = sData.split("&");
	for(var i=0;i<values.length;i++)
	{
		var entry = values[i].split("=");
		if(entry[0] == skey)
		{
			result = entry[1];
			break;
		}
	}
	return result;
}

var s_oLive = null;
var s_bCtrl = false;

function pgInitialize()
{
	s_oLive = new pgLibLiveMultiRender(pgAtx, pgLiveUI);
	if (s_oLive.Initialize("WEBDEMO", "", "connect.peergine.com:7781", "", 3, "(SingleMode){1}") != 0) {
		s_oLive = null;
		return;
	}
}

function pgClean()
{
	if (s_oLive) {
		s_oLive.Clean();
		s_oLive = null;
	}
}

function pgCtrl()
{
	if (s_bCtrl) {
		if(bTransfering||bIsReplying) {
					bIsReplying = false;
					bTransfering =false;
					btnRefuse();
		}
		s_oLive.VideoStop(id_CaptureID.value, 0);
		s_oLive.AudioStop(id_CaptureID.value, 0);
		s_oLive.Disconnect(id_CaptureID.value);

		s_bCtrl = false;
		id_Ctrl.value = "开始";
	}
	else {
		if (id_CaptureID.value == "") {
			alert("需要指定ID");
			return;
		}
		s_oLive.Connect(id_CaptureID.value);
		s_oLive.VideoStart(id_CaptureID.value, 0, "", pgAtx);
		s_oLive.AudioStart(id_CaptureID.value, 0, "");
		s_oLive.AudioSyncDelay(id_CaptureID.value, 0, 0);

		s_bCtrl = true;
		id_Ctrl.value = "停止";
	}
}

function pgVideoShowMode(iMode)
{
	if (s_oLive) {
		s_oLive.VideoShowMode(iMode);
	}
}

function pgVideoRecored(bAction)
{
	if (s_oLive) {
		if (bAction) {
			s_oLive.RecordStart(id_CaptureID.value, "e:\\temp\\1111.avi", 0, 0);
		}
		else {
			s_oLive.RecordStop(id_CaptureID.value);
		}
	}
}

function outString(out)
{
	debugOutString(out);
}

function pgMessage()
{
	if (s_oLive) {
		s_oLive.MessageSend(id_CaptureID.value, id_Msg.value);
	}
}

function pgLanScan()
{
	if (s_oLive) {
		s_oLive.LanScanStart(2);
	}
}

function pgNotifyOut(sMsg)
{
	try {
		var sHtml = "<pre style={font-size:12px;word-wrap:break-word;word-break:break-all;white-space:normal;}>" + sMsg + "</pre>";
		id_NotifyOut.document.body.insertAdjacentHTML("beforeEnd", sHtml);
		id_NotifyOut.document.body.doScroll("pageDown");
	}
	catch(e) {
	}
}

function pgAudioMute(bFlag)
{
	if (s_oLive) {
		s_oLive.AudioMute(id_CaptureID.value, 0, false, bFlag);
	}
}

function pgAudioSpeech(bFlag)
{
	if (s_oLive) {
		s_oLive.AudioSpeech(id_CaptureID.value, 0, bFlag);
	}
}

function debugOutHTML(sHtml)
{
	try {
		debugOut.document.body.insertAdjacentHTML("beforeEnd", sHtml);
		debugOut.document.body.doScroll("pageDown");
	}
	catch(e) {
	}
}

function debugOutString(sOut)
{
	if (debugSwitch.checked) {
		debugOutHTML("<pre style={font-size:12px;word-wrap:break-word;word-break:break-all;white-space:normal;}>" + sOut + "</pre>");
	}
}

</script>

</body>
</html>